--- a/src/libs/ma_strand/include/ma/strand.hpp
+++ b/src/libs/ma_strand/include/ma/strand.hpp
@@ -29,7 +29,7 @@ class strand : private boost::noncopyable
 public:
   explicit strand(boost::asio::io_service& io_service);
 
-  boost::asio::io_service& get_io_service();
+  boost::asio::io_service& context();
 
   template<typename Handler>
   void dispatch(MA_FWD_REF(Handler) handler);
@@ -51,19 +51,14 @@ private:
   boost::asio::io_service::strand strand_;
 }; // class strand
 
-inline boost::asio::io_service& get_io_context(ma::strand& strand)
-{
-  return strand.get_io_service();
-}
-
 inline strand::strand(boost::asio::io_service& io_service)
   : strand_(io_service)
 {
 }
 
-inline boost::asio::io_service& strand::get_io_service()
+inline boost::asio::io_service& strand::context()
 {
-  return ma::get_io_context(strand_);
+  return strand_.context();
 }
 
 template<typename Handler>
